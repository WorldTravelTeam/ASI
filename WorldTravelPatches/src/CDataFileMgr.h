#pragma once
#include <stdint.h>
#include "atArray.h"
#include "Hooking.h"
#include "Hooking.Patterns.h"

class CDataFileMgr
{
public:
	enum DATA_FILES : uint32_t
	{
		HEISTISLAND_WATER_XML = 68,
		LIBERTYCITY_WATER_XML = 90,
	};
	enum DataFileType : uint32_t
	{
		RPF_FILE,
		IDE_FILE,
		DELAYED_IDE_FILE,
		IPL_FILE,
		PERMANENT_ITYP_FILE,
		BENDABLEPLANTS_FILE,
		HANDLING_FILE,
		VEHICLEEXTRAS_FILE,
		GXT_FOLDER,
		PEDSTREAM_FILE,
		CARCOLS_FILE,
		POPGRP_FILE,
		PEDGRP_FILE,
		CARGRP_FILE,
		POPSCHED_FILE,
		ZONEBIND_FILE,
		RADIO_FILE,
		RADAR_BLIPS_FILE,
		THROWNWEAPONINFO_FILE,
		RMPTFX_FILE,
		PED_PERSONALITY_FILE,
		PED_PERCEPTION_FILE,
		VEHICLE_CAMERA_OFFSETS_FILE,
		FRONTEND_MENU_FILE,
		LEADERBOARD_DATA_FILE,
		LEADERBOARD_ICONS_FILE,
		NETWORKOPTIONS_FILE,
		TIMECYCLE_FILE,
		TIMECYCLEMOD_FILE,
		WEATHER_FILE,
		PLSETTINGSMALE_FILE,
		PLSETTINGSFEMALE_FILE,
		PROCOBJ_FILE,
		PROC_META_FILE,
		VFX_SETTINGS_FILE,
		SP_STATS_DISPLAY_LIST_FILE,
		MP_STATS_DISPLAY_LIST_FILE,
		PED_VARS_FILE,
		DISABLE_FILE,
		HUDCOLOR_FILE,
		HUD_TXD_FILE,
		FRONTEND_DAT_FILE,
		SCROLLBARS_FILE,
		TIME_FILE,
		BLOODFX_FILE,
		ENTITYFX_FILE,
		EXPLOSIONFX_FILE,
		MATERIALFX_FILE,
		MOTION_TASK_DATA_FILE,
		DEFAULT_TASK_DATA_FILE,
		MOUNT_TUNE_FILE,
		PED_BOUNDS_FILE,
		PED_HEALTH_FILE,
		PED_COMPONENT_SETS_FILE,
		PED_IK_SETTINGS_FILE,
		PED_TASK_DATA_FILE,
		PED_SPECIAL_ABILITIES_FILE,
		WHEELFX_FILE,
		WEAPONFX_FILE,
		DECALS_FILE,
		NAVMESH_INDEXREMAPPING_FILE,
		NAVNODE_INDEXREMAPPING_FILE,
		AUDIOMESH_INDEXREMAPPING_FILE,
		JUNCTION_TEMPLATES_FILE,
		PATH_ZONES_FILE,
		DISTANT_LIGHTS_FILE,
		DISTANT_LIGHTS_HD_FILE,
		FLIGHTZONES_FILE,
		WATER_FILE,
		TRAINCONFIGS_FILE,
		TRAINTRACK_FILE,
		PED_METADATA_FILE,
		WEAPON_METADATA_FILE,
		VEHICLE_METADATA_FILE,
		DISPATCH_DATA_FILE,
		DEFORMABLE_OBJECTS_FILE,
		TUNABLE_OBJECTS_FILE,
		PED_NAV_CAPABILITES_FILE,
		WEAPONINFO_FILE,
		WEAPONCOMPONENTSINFO_FILE,
		LOADOUTS_FILE,
		FIRINGPATTERNS_FILE,
		MOTIVATIONS_FILE,
		SCENARIO_POINTS_FILE,
		SCENARIO_POINTS_PSO_FILE,
		STREAMING_FILE,
		STREAMING_FILE_PLATFORM_PS3,
		STREAMING_FILE_PLATFORM_XENON,
		STREAMING_FILE_PLATFORM_OTHER,
		PED_BRAWLING_STYLE_FILE,
		AMBIENT_PED_MODEL_SET_FILE,
		AMBIENT_PROP_MODEL_SET_FILE,
		AMBIENT_VEHICLE_MODEL_SET_FILE,
		LADDER_METADATA_FILE,
		HEIGHTMESH_INDEXREMAPPING_FILE,
		SLOWNESS_ZONES_FILE,
		LIQUIDFX_FILE,
		VFXVEHICLEINFO_FILE,
		VFXPEDINFO_FILE,
		DOOR_TUNING_FILE,
		PTFXASSETINFO_FILE,
		SCRIPTFX_FILE,
		VFXREGIONINFO_FILE,
		VFXINTERIORINFO_FILE,
		CAMERA_METADATA_FILE,
		STREET_VEHICLE_ASSOCIATION_FILE,
		VFXWEAPONINFO_FILE,
		EXPLOSION_INFO_FILE,
		JUNCTION_TEMPLATES_PSO_FILE,
		MAPZONES_FILE,
		SP_STATS_UI_LIST_FILE,
		MP_STATS_UI_LIST_FILE,
		OBJ_COVER_TUNING_FILE,
		STREAMING_REQUEST_LISTS_FILE,
		PLAYER_CARD_SETUP,
		WORLD_HEIGHTMAP_FILE,
		WORLD_WATERHEIGHT_FILE,
		PED_OVERLAY_FILE,
		WEAPON_ANIMATIONS_FILE,
		VEHICLE_POPULATION_FILE,
		ACTION_TABLE_DEFINITIONS,
		ACTION_TABLE_RESULTS,
		ACTION_TABLE_IMPULSES,
		ACTION_TABLE_RUMBLES,
		ACTION_TABLE_INTERRELATIONS,
		ACTION_TABLE_HOMINGS,
		ACTION_TABLE_DAMAGES,
		ACTION_TABLE_STRIKE_BONES,
		ACTION_TABLE_BRANCHES,
		ACTION_TABLE_STEALTH_KILLS,
		ACTION_TABLE_VFX,
		ACTION_TABLE_FACIAL_ANIM_SETS,
		VEHGEN_MARKUP_FILE,
		PED_COMPONENT_CLOTH_FILE,
		TATTOO_SHOP_DLC_FILE,
		VEHICLE_VARIATION_FILE,
		CONTENT_UNLOCKING_META_FILE,
		SHOP_PED_APPAREL_META_FILE,
		AUDIO_SOUNDDATA,
		AUDIO_CURVEDATA,
		AUDIO_GAMEDATA,
		AUDIO_DYNAMIXDATA,
		AUDIO_SPEECHDATA,
		AUDIO_SYNTHDATA,
		AUDIO_WAVEPACK,
		CLIP_SETS_FILE,
		EXPRESSION_SETS_FILE,
		FACIAL_CLIPSET_GROUPS_FILE,
		NM_BLEND_OUT_SETS_FILE,
		VEHICLE_SHOP_DLC_FILE,
		WEAPON_SHOP_INFO_METADATA_FILE,
		SCALEFORM_PREALLOC_FILE,
		CONTROLLER_LABELS_FILE,
		CONTROLLER_LABELS_FILE_360,
		CONTROLLER_LABELS_FILE_PS3,
		CONTROLLER_LABELS_FILE_PS3_JPN,
		CONTROLLER_LABELS_FILE_ORBIS,
		CONTROLLER_LABELS_FILE_ORBIS_JPN,
		CONTROLLER_LABELS_FILE_DURANGO,
		IPLCULLBOX_METAFILE,
		TEXTFILE_METAFILE,
		NM_TUNING_FILE,
		MOVE_NETWORK_DEFS,
		WEAPONINFO_FILE_PATCH,
		DLC_SCRIPT_METAFILE,
		VEHICLE_LAYOUTS_FILE,
		DLC_WEAPON_PICKUPS,
		EXTRA_TITLE_UPDATE_DATA,
		SCALEFORM_DLC_FILE,
		OVERLAY_INFO_FILE,
		ALTERNATE_VARIATIONS_FILE,
		HORSE_REINS_FILE,
		FIREFX_FILE,
		INTERIOR_PROXY_ORDER_FILE,
		DLC_ITYP_REQUEST,
		EXTRA_FOLDER_MOUNT_DATA,
		BLOODFX_FILE_PATCH,
		SCRIPT_BRAIN_FILE,
		SCALEFORM_VALID_METHODS_FILE,
		DLC_POP_GROUPS,
		POPGRP_FILE_PATCH,
		SCENARIO_INFO_FILE,
		CONDITIONAL_ANIMS_FILE,
		STATS_METADATA_PSO_FILE,
		VFXFOGVOLUMEINFO_FILE,
		RPF_FILE_PRE_INSTALL,
		RPF_FILE_PRE_INSTALL_ONLY,
		LEVEL_STREAMING_FILE,
		SCENARIO_POINTS_OVERRIDE_FILE,
		SCENARIO_POINTS_OVERRIDE_PSO_FILE,
		SCENARIO_INFO_OVERRIDE_FILE,
		PED_FIRST_PERSON_ASSET_DATA,
		GTXD_PARENTING_DATA,
		COMBAT_BEHAVIOUR_OVERRIDE_FILE,
		EVENTS_OVERRIDE_FILE,
		PED_DAMAGE_OVERRIDE_FILE,
		PED_DAMAGE_APPEND_FILE,
		BACKGROUND_SCRIPT_FILE,
		PS3_SCRIPT_RPF,
		X360_SCRIPT_RPF,
		PED_FIRST_PERSON_ALTERNATE_DATA,
		ZONED_ASSET_FILE,
		ISLAND_HOPPER_FILE,
		CARCOLS_GEN9_FILE,
		CARMODCOLS_GEN9_FILE,
		COMMUNITY_STATS_FILE,
		GEN9_EXCLUSIVE_ASSETS_VEHICLES_FILE,
		GEN9_EXCLUSIVE_ASSETS_PEDS_FILE,
		INVALID_FILE
	};

	enum DataFileContents : uint32_t
	{
		CONTENTS_DEFAULT      = 0, // 0x1E3BA09F
		CONTENTS_PROPS        = 1, // 0x51B80AB
		CONTENTS_MAP          = 2, // 0xD5A22418
		CONTENTS_LODS         = 3, // 0x7B8053E
		CONTENTS_PEDS         = 4, // 0x8032E499
		CONTENTS_VEHICLES     = 5, // 0xBF0590D0
		CONTENTS_ANIMATION    = 6, // 0x6715003B
		CONTENTS_CUTSCENE     = 7, // 0x4FF5BBDB
		CONTENTS_DLC_MAP_DATA = 8, // 0x77BC5E79
		CONTENTS_DEBUG_ONLY   = 9, // 0x9E1B6F1F
		CONTENTS_MAX          = 10,// 0x43D10074
	};

	enum InstallPartition : uint32_t
	{
		PARTITION_NONE  = 4294967295, // 0xDD4E11A8
		PARTITION_0     = 0,		  // 0x520B3F7A
		PARTITION_1     = 1,		  // 0x9C42D3E8
		PARTITION_2     = 2,		  // 0xAD997695
		PARTITION_MAX   = 3,	      // 0xACD2BF9A
	};

	struct DataFile
	{
		char filename[128];
		atArray<char> registerAs; // atString
		DataFileType fileType;
		uint32_t index;
		bool locked;
		bool enforceLsnSorting;
		bool loadCompletely;
		bool disabled;
		bool persistent;
		bool overlay;
		bool patchFile;
		uint8_t _padding;
		DataFileContents contents;
		InstallPartition installPartition;
	};


	atArray<DataFile> m_DataFiles;
	uint8_t padding_10[0x30];
	DataFile m_InvalidDataFile;
	// ...

	static inline CDataFileMgr** sm_Instance;

	static CDataFileMgr* Instance();
	inline DataFile* FindFirst(int index)
	{
		//83 4D 4B FF 45 33 F6 48 8B F9 8B DA 48 8D 4D A7 41 B8
		static DataFile* (*fn)(CDataFileMgr * fileMgr, int size) = (decltype(fn))hook::get_pattern("48 8B C4 48 89 58 08 48 89 78 10 4C 89 70 18 55 48 8D 68 A1 48 81 EC ? ? ? ? 83 4D 4B FF 45 33 F6 48 8B F9 8B DA 48 8D 4D A7 41 B8 ? ? ? ? 33 D2");

		return fn(this, index);
	}
	inline DataFile* FindNext(DataFile* entry)
	{
		//FF 25 ? ? ? ? F0 CF 
		static DataFile*(*fn)(CDataFileMgr * fileMgr, DataFile*) = (decltype(fn))hook::get_pattern("48 ? ? ? ? 0F B7 ? ? 44 8B 82");

		return fn(this, entry);
	}
};

static_assert(sizeof(CDataFileMgr::DataFile) == 0xA8);

class CFileLoader
{
public:
	static void EnableRpfFile(CDataFileMgr::DataFile* fileEntry);
	static void DisableRpfFile(CDataFileMgr::DataFile* fileEntry);
};
